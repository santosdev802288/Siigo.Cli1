syntax = "proto3";

package contract.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "Contract.V1";

message ContractDebit {
  google.protobuf.FloatValue amount = 1;
  google.protobuf.UInt32Value status = 2;
}

// https://docs.microsoft.com/en-us/dotnet/architecture/grpc-for-wcf-developers/protobuf-data-types#nullable-types
message Contract {
  google.protobuf.StringValue id = 1;
  google.protobuf.Int32Value cost = 2;
  google.protobuf.BoolValue activated = 3;
  google.protobuf.StringValue address = 4;
  google.protobuf.StringValue email = 5;
  google.protobuf.Timestamp occurred_at = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  ContractDebit debit = 7;
}


message FindContractByIdRequest {
  string contract_id = 1;
}

message FindContractByIdResponse {
  Contract contract = 1;
}

message FindContractsResponse {
  repeated Contract contracts = 1;
}

message CreateContractRequest {
  Contract contract = 1;
}

message CreateContractResponse {
  string contract_id = 1;
}
message UpdateContractRequest {
  Contract contract = 1;
}

message UpdateContractResponse {
  Contract contract = 1;
}

message DeleteContractRequest {
  string contract_id = 1;
}

service ContractService {
  rpc FindContractById(FindContractByIdRequest) returns (FindContractByIdResponse) {
    option (google.api.http) = {
      get: "/api/v1/contracts/{contract_id}"
    };
  }

  rpc FindContracts(google.protobuf.Empty) returns (FindContractsResponse) {
    option (google.api.http) = {
      get: "/api/v1/contracts"
    };
  }

  rpc CreateContract(CreateContractRequest) returns (CreateContractResponse) {
    option (google.api.http) = {
      post: "/api/v1/contracts",
      body: "*"
    };
  }

  rpc UpdateContract(UpdateContractRequest) returns (UpdateContractResponse) {
    option (google.api.http) = {
      put: "/api/v1/contracts/{contract.id}",
      body: "*"
    };
  }

  rpc DeleteContract(DeleteContractRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/contracts/{contract_id}"
    };
  }
}
