// Code generated by mockery 2.7.5. DO NOT EDIT.

package mocks

import (
	context "context"

	example "siigo.com/bolt/proto"

	mock "github.com/stretchr/testify/mock"
)

// PersonServer is an autogenerated mock type for the PersonServer type
type PersonServer struct {
	mock.Mock
}

// AddPerson provides a mock function with given fields: _a0, _a1
func (_m *PersonServer) AddPerson(_a0 context.Context, _a1 *example.PersonResource) (*example.PersonResource, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *example.PersonResource
	if rf, ok := ret.Get(0).(func(context.Context, *example.PersonResource) *example.PersonResource); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*example.PersonResource)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *example.PersonResource) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindAll provides a mock function with given fields: _a0, _a1
func (_m *PersonServer) FindAll(_a0 context.Context, _a1 *example.FilterCriteria) (*example.PersonResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *example.PersonResponse
	if rf, ok := ret.Get(0).(func(context.Context, *example.FilterCriteria) *example.PersonResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*example.PersonResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *example.FilterCriteria) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
